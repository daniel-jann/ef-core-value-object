// <auto-generated />
using Bank;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Bank.Migrations
{
    [DbContext(typeof(BankDbContext))]
    partial class BankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bank.Model.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Bank.Model.BankLayoutSettings", b =>
                {
                    b.Property<Guid>("BankId");

                    b.Property<string>("LogoKey");

                    b.HasKey("BankId");

                    b.ToTable("BankLayoutSettings");
                });

            modelBuilder.Entity("Bank.Model.BankLayoutSettings", b =>
                {
                    b.HasOne("Bank.Model.Bank")
                        .WithOne()
                        .HasForeignKey("Bank.Model.BankLayoutSettings", "BankId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Bank.Model.Color", "FooterForeColor", b1 =>
                        {
                            b1.Property<Guid?>("BankLayoutSettingsBankId");

                            b1.Property<string>("_hashPrefixedHexTriplet")
                                .HasColumnName("FooterForeColor");

                            b1.ToTable("BankLayoutSettings");

                            b1.HasOne("Bank.Model.BankLayoutSettings")
                                .WithOne("FooterForeColor")
                                .HasForeignKey("Bank.Model.Color", "BankLayoutSettingsBankId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Bank.Model.Color", "HeaderAndFooterBackgroundColor", b1 =>
                        {
                            b1.Property<Guid>("BankLayoutSettingsBankId");

                            b1.Property<string>("_hashPrefixedHexTriplet")
                                .HasColumnName("HeaderAndFooterBackgroundColor");

                            b1.ToTable("BankLayoutSettings");

                            b1.HasOne("Bank.Model.BankLayoutSettings")
                                .WithOne("HeaderAndFooterBackgroundColor")
                                .HasForeignKey("Bank.Model.Color", "BankLayoutSettingsBankId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Bank.Model.Color", "HeaderForeColor", b1 =>
                        {
                            b1.Property<Guid?>("BankLayoutSettingsBankId");

                            b1.Property<string>("_hashPrefixedHexTriplet")
                                .HasColumnName("HeaderForeColor");

                            b1.ToTable("BankLayoutSettings");

                            b1.HasOne("Bank.Model.BankLayoutSettings")
                                .WithOne("HeaderForeColor")
                                .HasForeignKey("Bank.Model.Color", "BankLayoutSettingsBankId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Bank.Model.Color", "TitlesForeColor", b1 =>
                        {
                            b1.Property<Guid?>("BankLayoutSettingsBankId");

                            b1.Property<string>("_hashPrefixedHexTriplet")
                                .HasColumnName("TitlesForeColor");

                            b1.ToTable("BankLayoutSettings");

                            b1.HasOne("Bank.Model.BankLayoutSettings")
                                .WithOne("TitlesForeColor")
                                .HasForeignKey("Bank.Model.Color", "BankLayoutSettingsBankId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
